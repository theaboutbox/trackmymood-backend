{
    "name": "trackmymood-online",
    "version": "0.0.1",
    "profile": "serverless-v0.1.2",
    "location": "https://github.com/serverless/serverless-graphql-blog",
    "author": "Cameron Pope <cpope@gtri.com>",
    "description": "Backend for a simple application to collect and query time-series data",
    "custom": {
        "serverless-offline": {
            "babelOptions": {
                "presets": ["es2015"]
            }
        }
    },
    "plugins": [
        "serverless-optimizer-plugin","serverless-offline"
    ],
    "cloudFormation": {
        "AWSTemplateFormatVersion": "2010-09-09",
        "Description": "The AWS CloudFormation template for this Serverless application's resources outside of Lambdas and Api Gateway",
        "Resources": {
            "IamRoleLambda": {
                "Type": "AWS::IAM::Role",
                "Properties": {
                    "AssumeRolePolicyDocument": {
                        "Version": "2012-10-17",
                        "Statement": [
                            {
                                "Effect": "Allow",
                                "Principal": {
                                    "Service": [
                                        "lambda.amazonaws.com"
                                    ]
                                },
                                "Action": [
                                    "sts:AssumeRole"
                                ]
                            }
                        ]
                    },
                    "Path": "/"
                }
            },
            "IamPolicyLambda": {
                "Type": "AWS::IAM::Policy",
                "Properties": {
                    "PolicyName": "${stage}-${project}-lambda",
                    "PolicyDocument": {
                        "Version": "2012-10-17",
                        "Statement": [
                            {
                                "Effect": "Allow",
                                "Action": [
                                    "logs:CreateLogGroup",
                                    "logs:CreateLogStream",
                                    "logs:PutLogEvents"
                                ],
                                "Resource": "arn:aws:logs:${region}:*:*"
                            },
                            {
                                "Effect": "Allow",
                                "Action": [
                                    "*"
                                ],
                                "Resource": "arn:aws:dynamodb:${region}:*:table/${project}-posts-${stage}"
                            },
                            {
                                "Effect": "Allow",
                                "Action": [
                                    "*"
                                ],
                                "Resource": "arn:aws:dynamodb:${region}:*:table/${project}-authors-${stage}"
                            },
                            {
                                "Effect": "Allow",
                                "Action": [
                                    "*"
                                ],
                                "Resource": "arn:aws:dynamodb:${region}:*:table/${project}-comments-${stage}"
                            },
                            {
                                "Effect": "Allow",
                                "Action": [
                                    "*"
                                ],
                                "Resource": "arn:aws:dynamodb:${region}:*:table/${project}-events-${stage}"
                            }
                        ]
                    },
                    "Roles": [
                        {
                            "Ref": "IamRoleLambda"
                        }
                    ]
                }
            },
            "EventsDynamo": {
                "Type": "AWS::DynamoDB::Table",
                "DeletionPolicy": "Retain",
                "Properties": {
                    "AttributeDefinitions": [
                        {
                            "AttributeName": "username",
                            "AttributeType": "S"
                        },
                        {
                            "AttributeName": "created",
                            "AttributeType": "N"
                        }
                    ],
                    "KeySchema": [
                        {
                            "AttributeName": "username",
                            "KeyType": "HASH"
                        },
                        {
                            "AttributeName": "created",
                            "KeyType": "RANGE"
                        }
                    ],
                    "ProvisionedThroughput": {
                        "ReadCapacityUnits": 1,
                        "WriteCapacityUnits": 1
                    },
                    "TableName": "${project}-events-${stage}"
                }
            },
            "PostsDynamo": {
                "Type": "AWS::DynamoDB::Table",
                "DeletionPolicy": "Retain",
                "Properties": {
                    "AttributeDefinitions": [
                        {
                            "AttributeName": "id",
                            "AttributeType": "S"
                        }
                    ],
                    "KeySchema": [
                        {
                            "AttributeName": "id",
                            "KeyType": "HASH"
                        }
                    ],
                    "ProvisionedThroughput": {
                        "ReadCapacityUnits": 1,
                        "WriteCapacityUnits": 1
                    },
                    "TableName": "${project}-posts-${stage}"
                }
            },
            "AuthorsDynamo": {
                "Type": "AWS::DynamoDB::Table",
                "DeletionPolicy": "Retain",
                "Properties": {
                    "AttributeDefinitions": [
                        {
                            "AttributeName": "id",
                            "AttributeType": "S"
                        }
                    ],
                    "KeySchema": [
                        {
                            "AttributeName": "id",
                            "KeyType": "HASH"
                        }
                    ],
                    "ProvisionedThroughput": {
                        "ReadCapacityUnits": 1,
                        "WriteCapacityUnits": 1
                    },
                    "TableName": "${project}-authors-${stage}"
                }
            },
            "CommentsDynamo": {
                "Type": "AWS::DynamoDB::Table",
                "DeletionPolicy": "Retain",
                "Properties": {
                    "AttributeDefinitions": [
                        {
                            "AttributeName": "id",
                            "AttributeType": "S"
                        }
                    ],
                    "KeySchema": [
                        {
                            "AttributeName": "id",
                            "KeyType": "HASH"
                        }
                    ],
                    "ProvisionedThroughput": {
                        "ReadCapacityUnits": 1,
                        "WriteCapacityUnits": 1
                    },
                    "TableName": "${project}-comments-${stage}"
                }
            }
        },
        "Outputs": {
            "IamRoleArnLambda": {
                "Description": "ARN of the lambda IAM role",
                "Value": {
                    "Fn::GetAtt": [
                        "IamRoleLambda",
                        "Arn"
                    ]
                }
            }
        }
    }
}
